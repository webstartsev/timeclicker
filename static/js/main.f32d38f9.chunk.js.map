{"version":3,"sources":["helpers/function.js","components/TaskItem/TaskItem.js","components/TaskList/TaskList.js","components/AddTask/AddTask.js","components/CurrentTask/CurrentTask.js","data/task.js","components/App/App.js","serviceWorker.js","index.js"],"names":["secToTime","time","hrs","mins","secs","ret","TaskItem","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","beforeAction","bind","assertThisInitialized","inherits","createClass","key","value","nextProps","_this$props","task","currentTask","status","id","action","onAction","el","classList","add","remove","_this$props2","console","log","diff","deadline","react_default","a","createElement","className","style","title","onClick","React","Component","defaultProps","f","onChangeDeadline","TaskList","_ref","_ref$data","data","_ref$currentTask","_ref$onAction","_ref$time","_ref$onChangeDeadline","map","components_TaskItem_TaskItem","AddTask","submit","e","_title","refs","onSubmit","preventDefault","ref","type","CurrentTask","App","state","tasks","dataTasks","timerId","addTask","taskAction","changeDeadline","_prepareTask","concat","toConsumableArray","setState","v4","_this2","stopTask","startTask","objectSpread","_this3","clearTimeout","setInterval","tiktak","_this$state","components_AddTask_AddTask","components_TaskList_TaskList","components_CurrentTask_CurrentTask","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kYAAA,SAASA,EAAUC,GAGjB,IAAMC,KAASD,EAAO,MAChBE,KAAWF,EAAO,KAAQ,IAC1BG,EAAOH,EAAO,GAEhBI,EAAM,GASV,OARIH,EAAM,GACRG,GAAOH,EAAM,GAAK,IAAMA,EAAM,IAAMA,EAAM,IAC1CG,GAAOF,EAAO,GAAK,IAAMA,EAAO,IAAMA,IAEtCE,GAAOF,EAAO,GAAK,IAAMA,EAAO,IAAMA,EAAO,IAC7CE,GAAOD,EAAO,GAAK,IAAMA,EAAOA,GAG3BC,ECVF,IAAMC,EAAb,SAAAC,GACE,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACjBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KACDQ,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFHA,EADrB,OAAAC,OAAAS,EAAA,EAAAT,CAAAJ,EAAAC,GAAAG,OAAAU,EAAA,EAAAV,CAAAJ,EAAA,EAAAe,IAAA,wBAAAC,MAAA,SAOwBC,GAAW,IAAAC,EACDZ,KAAKJ,MAA3BiB,EADuBD,EACvBC,KAAMC,EADiBF,EACjBE,YAEd,OAAID,EAAKE,SAAWJ,EAAUE,KAAKE,QAGf,OAAhBD,GACEA,EAAYE,KAAOL,EAAUE,KAAKG,IAAMF,EAAYzB,OAASsB,EAAUtB,OAdjF,CAAAoB,IAAA,eAAAC,MAAA,SAyBeM,EAAIC,IAeXC,EAdiBlB,KAAKJ,MAAlBsB,UAcKF,EAAIC,KAxCrB,CAAAR,IAAA,YAAAC,MAAA,SA6CYS,GACRA,EAAGC,UAAUC,IAAI,6BA9CrB,CAAAZ,IAAA,cAAAC,MAAA,SAgDcS,GACVA,EAAGC,UAAUE,OAAO,6BAjDxB,CAAAb,IAAA,SAAAC,MAAA,WAoDW,IACCN,EAAiBJ,KAAjBI,aADDmB,EAE6BvB,KAAKJ,MAAjCiB,EAFDU,EAECV,KAAMC,EAFPS,EAEOT,YAAazB,EAFpBkC,EAEoBlC,KAC3BmC,QAAQC,IAAI,gBAAiBX,GAE7B,IAAMY,GAAgBb,EAAKxB,SD1CG,GC0CGwB,EAAKc,SD1CH,GAD9B,MAIe,OCwCpB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,MAAOhC,KAAKgC,OACpCJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBlB,EAAKoB,OACtCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACI,SAAhBlB,EAAKE,OACJa,EAAAC,EAAAC,cAAA,UACEI,QAAS,kBAAM9B,EAAaS,EAAKG,GAAI,SACrCe,UAAU,mCAFZ,QAOAH,EAAAC,EAAAC,cAAA,UACEI,QAAS,kBAAM9B,EAAaS,EAAKG,GAAI,SACrCe,UAAU,mCAFZ,SAQJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACW3C,EAAP,OAAhB0B,EAAiCzB,EAAkBwB,EAAKxB,OAE3DuC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBlB,EAAKc,UACzCC,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAO,EAAI,oCAAsC,iBAC9DA,UArFfhC,EAAA,CAA8ByC,IAAMC,WAqGpC1C,EAAS2C,aAAe,CACtBxB,KAAM,GACNK,SAAU,SAAAoB,GAAC,OAAIA,GACfjD,KAAM,EACNkD,iBAAkB,SAAAD,GAAC,OAAIA,IAGV5C,QCpEA8C,EAxCE,SAAAC,GAMX,IAAAC,EAAAD,EALJE,YAKI,IAAAD,EALG,GAKHA,EAAAE,EAAAH,EAJJ3B,mBAII,IAAA8B,EAJU,GAIVA,EAAAC,EAAAJ,EAHJvB,gBAGI,IAAA2B,EAHO,SAAAP,GAAC,OAAIA,GAGZO,EAAAC,EAAAL,EAFJpD,YAEI,IAAAyD,EAFG,EAEHA,EAAAC,EAAAN,EADJF,wBACI,IAAAQ,EADe,SAAAT,GAAC,OAAIA,GACpBS,EACJ,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCAAf,oDACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,oDACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,kCACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,oDACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,gDAGHY,EAAKK,IAAI,SAAAnC,GAAI,OACZe,EAAAC,EAAAC,cAACmB,EAAD,CACExC,IAAKI,EAAKG,GACVF,YAAaA,EACbD,KAAMA,EACNK,SAAUA,EACV7B,KAAMA,EACNkD,iBAAkBA,QC3BtBW,qBACJ,SAAAA,EAAYtD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,IACjBrD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoD,GAAA/C,KAAAH,KAAMJ,KAEDuD,OAAStD,EAAKsD,OAAO9C,KAAZP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAHGA,sEAMZuD,GAAG,IACAC,EAAWrD,KAAKsD,KAAhBD,OACAE,EAAavD,KAAKJ,MAAlB2D,SACRH,EAAEI,iBACmB,KAAjBH,EAAO3C,QACT6C,EAASF,EAAO3C,OAChB2C,EAAO3C,MAAQ,qCAKjB,OACEkB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAUwB,SAAUvD,KAAKmD,QACvCvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SAAO2B,IAAI,SAAS1B,UAAU,kBAC9BH,EAAAC,EAAAC,cAAA,SAAO4B,KAAK,SAAShD,MAAM,8DAtBfyB,IAAMC,YAiC5Bc,EAAQb,aAAe,CACrBkB,SAAU,SAAAjB,GAAC,OAAIA,IAGFY,QCrBAS,SAhBK,SAAAlB,GAAqC,IAAAG,EAAAH,EAAlC3B,mBAAkC,IAAA8B,EAApB,GAAoBA,EAAAE,EAAAL,EAAhBpD,YAAgB,IAAAyD,EAAT,GAASA,EACvD,OACElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBjB,EAAYmB,OAChDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB1C,OCkB5BwB,EA3BF,CACX,CACEG,GAAI,uCACJiB,MAAO,yFACPlB,OAAQ,OACR1B,KAAM,EACNsC,SAAU,EACVD,KAAM,GAER,CACEV,GAAI,6CACJiB,MAAO,cACPlB,OAAQ,OACR1B,KAAM,EACNsC,SAAU,EACVD,KAAM,GAER,CACEV,GAAI,4CACJiB,MAAO,mBACPlB,OAAQ,OACR1B,KAAM,EACNsC,SAAU,GACVD,KAAM,IC6FKkC,cAxGb,SAAAA,EAAYhE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4D,IACjB/D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8D,GAAAzD,KAAAH,KAAMJ,KACDiE,MAAQ,CACXC,MAAOC,EACPjD,YAAa,KACbzB,KAAM,EACN2E,QAAS,MAGXnE,EAAKoE,QAAUpE,EAAKoE,QAAQ5D,KAAbP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACfA,EAAKqE,WAAarE,EAAKqE,WAAW7D,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAClBA,EAAKsE,eAAiBtE,EAAKsE,eAAe9D,KAApBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAXLA,uEAcXa,GACN,IACMoD,EAAK,CADE9D,KAAKoE,aAAa1D,IACpB2D,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAaE,KAAK6D,MAAMC,QAEnC9D,KAAKuE,SAAS,CAAET,+CAGLpD,GACX,MAAO,CACLM,GAAIwD,eACJvC,MAAOvB,EACPK,OAAQ,OACR1B,KAAM,KACNsC,SAAU,yCAIHX,EAAIC,GAAQ,IAAAwD,EAAAzE,KACf8D,EAAQ9D,KAAK6D,MAAMC,MAAMd,IAAI,SAAAnC,GACjC,GAAIA,EAAKG,KAAOA,EAAI,CAClB,OAAQC,GACN,IAAK,OACHwD,EAAKC,WACL,MACF,QACED,EAAKE,UAAU9D,GAInB,OAAOf,OAAA8E,EAAA,EAAA9E,CAAA,GACFe,EADL,CAEEE,OAAQE,EACR5B,KAAMoF,EAAKZ,MAAMxE,OAGnB,MAAoB,SAAhBwB,EAAKE,OACAjB,OAAA8E,EAAA,EAAA9E,CAAA,GACFe,EADL,CAEEE,OAAQ,SAIPF,IAGTb,KAAKuE,SAAS,CAAET,4CAGRjD,GAAM,IAAAgE,EAAA7E,KACVX,EAAOwB,EAAKxB,KAEW,OAAvBW,KAAK6D,MAAMG,SACbc,aAAa9E,KAAK6D,MAAMG,SAG1B,IAAMA,EAAUe,YAAY,WAC1B,IAAIC,EAAS3F,IACbwF,EAAKN,SAAS,CAAEzD,YAAYhB,OAAA8E,EAAA,EAAA9E,CAAA,GAAMe,EAAP,CAAaxB,KAAM2F,IAAU3F,KAAM2F,KAC7D,KAEHhF,KAAKuE,SAAS,CAAEzD,YAAYhB,OAAA8E,EAAA,EAAA9E,CAAA,GAAMe,EAAP,CAAaE,OAAQ,UAAW1B,OAAM2E,+CAGjEc,aAAa9E,KAAK6D,MAAMG,SACxBhE,KAAKuE,SAAS,CAAEzD,YAAa,8CAGhBJ,GACbc,QAAQC,IAAI,UAAWf,oCAGhB,IAAAuE,EAC8BjF,KAAK6D,MAAlCC,EADDmB,EACCnB,MAAOzE,EADR4F,EACQ5F,KAAMyB,EADdmE,EACcnE,YACbmD,EAAwCjE,KAAxCiE,QAASC,EAA+BlE,KAA/BkE,WAAYC,EAAmBnE,KAAnBmE,eAC7B,OACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACoD,EAAD,CAAS3B,SAAUU,IACnBrC,EAAAC,EAAAC,cAACqD,EAAD,CACExC,KAAMmB,EACN5C,SAAUgD,EACVpD,YAAaA,EACbzB,KAAMA,EACNkD,iBAAkB4B,IAEnBrD,GAAec,EAAAC,EAAAC,cAACsD,EAAD,CAAatE,YAAaA,EAAazB,KAAMD,EAAUC,aAnG7D+C,aCCEiD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/D,EAAAC,EAAAC,cAAC8D,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f32d38f9.chunk.js","sourcesContent":["function secToTime(time) {\r\n  // Перевод СЕКУНД во время\r\n  // Hours, minutes and seconds\r\n  const hrs = ~~(time / 3600);\r\n  const mins = ~~((time % 3600) / 60);\r\n  const secs = time % 60;\r\n  // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\r\n  let ret = '';\r\n  if (hrs > 0) {\r\n    ret += hrs < 10 ? '0' + hrs + ':' : hrs + ':';\r\n    ret += mins < 10 ? '0' + mins + ':' : mins;\r\n  } else {\r\n    ret += mins < 10 ? '0' + mins + ':' : mins + ':';\r\n    ret += secs < 10 ? '0' + secs : secs;\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nfunction timeDiff(time, deadline) {\r\n  time = 7800;\r\n  const deadlineTime = deadline * 60 * 60;\r\n  const diff = deadlineTime - time;\r\n\r\n  const hrs = ~~(diff / 3600);\r\n\r\n  return hrs;\r\n}\r\n\r\nexport { secToTime, timeDiff };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TaskItem.css';\r\n\r\nimport { secToTime, timeDiff } from '../../helpers/function';\r\n\r\nexport class TaskItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.beforeAction = this.beforeAction.bind(this);\r\n  }\r\n  // Если новый рейтинг остался таким же, как и в текущих свойствах,\r\n  // то не надо обновлять компонент.\r\n  shouldComponentUpdate(nextProps) {\r\n    const { task, currentTask } = this.props;\r\n\r\n    if (task.status !== nextProps.task.status) {\r\n      return true;\r\n    }\r\n    if (currentTask !== null) {\r\n      if (currentTask.id === nextProps.task.id && currentTask.time !== nextProps.time) {\r\n        // console.log('currentTask: ', currentTask);\r\n        // console.log('nextProps: ', nextProps);\r\n        // console.log('task: ', task);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  beforeAction(id, action) {\r\n    const { onAction } = this.props;\r\n    switch (action) {\r\n      // case 'play':\r\n      //   const { _deadline } = this.refs;\r\n\r\n      //   if (_deadline.value === '') {\r\n      //     this.showError(_deadline);\r\n      //     _deadline.focus();\r\n      //   } else {\r\n      //     this.removeError(_deadline);\r\n      //     onAction(id, action);\r\n      //   }\r\n      //   break;\r\n      default:\r\n        onAction(id, action);\r\n        break;\r\n    }\r\n  }\r\n\r\n  showError(el) {\r\n    el.classList.add('TaskItem-deadline_error');\r\n  }\r\n  removeError(el) {\r\n    el.classList.remove('TaskItem-deadline_error');\r\n  }\r\n\r\n  render() {\r\n    const { beforeAction } = this;\r\n    const { task, currentTask, time } = this.props;\r\n    console.log('currentTask: ', currentTask);\r\n\r\n    const diff = timeDiff(task.time, task.deadline);\r\n    return (\r\n      <div className=\"TaskItem\" style={this.style}>\r\n        <div className=\"TaskItem-title\">{task.title}</div>\r\n        <div className=\"TaskItem-detail\">\r\n          <div className=\"TaskItem-action\">\r\n            {task.status !== 'play' ? (\r\n              <button\r\n                onClick={() => beforeAction(task.id, 'play')}\r\n                className=\"TaskItem-btn TaskItem_type_play\"\r\n              >\r\n                Play\r\n              </button>\r\n            ) : (\r\n              <button\r\n                onClick={() => beforeAction(task.id, 'stop')}\r\n                className=\"TaskItem-btn TaskItem_type_stop\"\r\n              >\r\n                Stop\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className=\"TaskItem-times\">\r\n            <div className=\"TaskItem-time\">\r\n              {currentTask !== null ? secToTime(time) : secToTime(task.time)}\r\n            </div>\r\n            <div className=\"TaskItem-deadline\">{task.deadline}</div>\r\n            <div className={diff < 0 ? 'TaskItem-diff TaskItem-diff_error' : 'TaskItem-diff'}>\r\n              {diff}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTaskItem.propTypes = {\r\n  task: PropTypes.object,\r\n  onAction: PropTypes.func,\r\n  time: PropTypes.number,\r\n  onChangeDeadline: PropTypes.func\r\n};\r\n\r\nTaskItem.defaultProps = {\r\n  task: {},\r\n  onAction: f => f,\r\n  time: 0,\r\n  onChangeDeadline: f => f\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TaskList.css';\r\n\r\nimport TaskItem from '../TaskItem/TaskItem';\r\n\r\nconst TaskList = ({\r\n  data = [],\r\n  currentTask = {},\r\n  onAction = f => f,\r\n  time = 0,\r\n  onChangeDeadline = f => f\r\n}) => {\r\n  return (\r\n    <div className=\"TaskList\">\r\n      <div className=\"TaskList-header\">\r\n        <div className=\"TaskList-col TaskList-col_type_name\">Название</div>\r\n        <div className=\"TaskList-groupe\">\r\n          <div className=\"TaskList-col\">Действие</div>\r\n          <div className=\"TaskList-col\">Время</div>\r\n          <div className=\"TaskList-col\">Дейдлайн</div>\r\n          <div className=\"TaskList-col\">Разница</div>\r\n        </div>\r\n      </div>\r\n      {data.map(task => (\r\n        <TaskItem\r\n          key={task.id}\r\n          currentTask={currentTask}\r\n          task={task}\r\n          onAction={onAction}\r\n          time={time}\r\n          onChangeDeadline={onChangeDeadline}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskList.propTypes = {\r\n  data: PropTypes.array,\r\n  onAction: PropTypes.func,\r\n  currentTask: PropTypes.object,\r\n  time: PropTypes.number,\r\n  onChangeDeadline: PropTypes.func\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AddTask.css';\r\n\r\nclass AddTask extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.submit = this.submit.bind(this);\r\n  }\r\n\r\n  submit(e) {\r\n    const { _title } = this.refs;\r\n    const { onSubmit } = this.props;\r\n    e.preventDefault();\r\n    if (_title.value !== '') {\r\n      onSubmit(_title.value);\r\n      _title.value = '';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"AddTask\" onSubmit={this.submit}>\r\n        <div className=\"AddTask-wrap\">\r\n          <input ref=\"_title\" className=\"AddTask-input\" />\r\n          <input type=\"submit\" value=\"Добавить\" />\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nAddTask.propTypes = {\r\n  onSubmit: PropTypes.func\r\n};\r\n\r\nAddTask.defaultProps = {\r\n  onSubmit: f => f\r\n};\r\n\r\nexport default AddTask;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './CurrentTask.css';\r\n\r\nconst CurrentTask = ({ currentTask = {}, time = '' }) => {\r\n  return (\r\n    <div className=\"CurrentTask\">\r\n      <div className=\"CurrentTask-wrapper\">\r\n        <div className=\"CurrentTask-title\">{currentTask.title}</div>\r\n        <div className=\"CurrentTask-time\">{time}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCurrentTask.propTypes = {\r\n  currentTask: PropTypes.object,\r\n  time: PropTypes.string\r\n};\r\n\r\nexport default CurrentTask;\r\n","const task = [\r\n  {\r\n    id: '0175d1f0-a8c6-41bf-8d02-df5734d829a4',\r\n    title: 'Заявка на оплату',\r\n    status: 'stop',\r\n    time: 0,\r\n    deadline: 0,\r\n    diff: 0\r\n  },\r\n  {\r\n    id: '0175d1f0-a8c6-41bf-8d02-df5734123123d829a4',\r\n    title: 'sdfsdfsfsdf',\r\n    status: 'stop',\r\n    time: 0,\r\n    deadline: 2,\r\n    diff: 0\r\n  },\r\n  {\r\n    id: '0175d1f0-a8c6-41bf-8d02-df5734d85346769a4',\r\n    title: '23424234у 3',\r\n    status: 'stop',\r\n    time: 0,\r\n    deadline: 15,\r\n    diff: 0\r\n  }\r\n];\r\n\r\nexport default task;\r\n","import React, { Component } from 'react';\nimport { v4 } from 'uuid';\nimport './App.css';\n\nimport TaskList from '../TaskList/TaskList';\nimport AddTask from '../AddTask/AddTask';\nimport CurrentTask from '../CurrentTask/CurrentTask';\n\nimport dataTasks from '../../data/task';\nimport { secToTime } from '../../helpers/function';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: dataTasks,\n      currentTask: null,\n      time: 0,\n      timerId: null\n    };\n\n    this.addTask = this.addTask.bind(this);\n    this.taskAction = this.taskAction.bind(this);\n    this.changeDeadline = this.changeDeadline.bind(this);\n  }\n\n  addTask(value) {\n    const task = this._prepareTask(value);\n    const tasks = [task, ...this.state.tasks];\n\n    this.setState({ tasks });\n  }\n\n  _prepareTask(value) {\n    return {\n      id: v4(),\n      title: value,\n      status: 'stop',\n      time: null,\n      deadline: null\n    };\n  }\n\n  taskAction(id, action) {\n    const tasks = this.state.tasks.map(task => {\n      if (task.id === id) {\n        switch (action) {\n          case 'stop':\n            this.stopTask();\n            break;\n          default:\n            this.startTask(task);\n            break;\n        }\n\n        return {\n          ...task,\n          status: action,\n          time: this.state.time\n        };\n      } else {\n        if (task.status === 'play') {\n          return {\n            ...task,\n            status: 'stop'\n          };\n        }\n      }\n      return task;\n    });\n\n    this.setState({ tasks });\n  }\n\n  startTask(task) {\n    let time = task.time;\n\n    if (this.state.timerId !== null) {\n      clearTimeout(this.state.timerId);\n    }\n\n    const timerId = setInterval(() => {\n      let tiktak = time++;\n      this.setState({ currentTask: { ...task, time: tiktak }, time: tiktak });\n    }, 1000);\n\n    this.setState({ currentTask: { ...task, status: 'start' }, time, timerId });\n  }\n  stopTask() {\n    clearTimeout(this.state.timerId);\n    this.setState({ currentTask: null });\n  }\n\n  changeDeadline(value) {\n    console.log('value: ', value);\n  }\n\n  render() {\n    const { tasks, time, currentTask } = this.state;\n    const { addTask, taskAction, changeDeadline } = this;\n    return (\n      <div className=\"App\">\n        <AddTask onSubmit={addTask} />\n        <TaskList\n          data={tasks}\n          onAction={taskAction}\n          currentTask={currentTask}\n          time={time}\n          onChangeDeadline={changeDeadline}\n        />\n        {currentTask && <CurrentTask currentTask={currentTask} time={secToTime(time)} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
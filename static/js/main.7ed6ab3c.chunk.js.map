{"version":3,"sources":["components/TaskItem/TaskItem.js","components/TaskList/TaskList.js","components/AddTask/AddTask.js","data/task.js","components/App/App.js","helpers/function.js","serviceWorker.js","index.js"],"names":["TaskItem","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","beforeAction","bind","assertThisInitialized","inherits","createClass","key","value","nextProps","task","status","time","id","action","onAction","el","classList","add","remove","_this$props","onChangeDeadline","react_default","a","createElement","className","style","title","onClick","type","ref","defaultValue","deadline","onChange","React","Component","defaultProps","f","TaskList","_ref","_ref$data","data","_ref$onAction","_ref$time","_ref$onChangeDeadline","map","components_TaskItem_TaskItem","AddTask","submit","e","_title","refs","onSubmit","preventDefault","App","state","tasks","dataTasks","currentTask","addTask","taskAction","changeDeadline","_prepareTask","concat","toConsumableArray","setState","v4","_this2","startTask","stopTask","pauseTask","console","log","objectSpread","_this3","timerId","setInterval","tiktak","clearTimeout","_this$state","components_AddTask_AddTask","components_TaskList_TaskList","hrs","mins","ret","secToTime","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ed6ab3c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TaskItem.css';\r\n\r\n// import { secToTime } from '../../helpers/function';\r\n\r\nexport class TaskItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.beforeAction = this.beforeAction.bind(this);\r\n  }\r\n  // Если новый рейтинг остался таким же, как и в текущих свойствах,\r\n  // то не надо обновлять компонент.\r\n  shouldComponentUpdate(nextProps) {\r\n    const { task } = this.props;\r\n    if (task.status !== nextProps.task.status || task.time !== nextProps.time) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  beforeAction(id, action) {\r\n    const { onAction } = this.props;\r\n    switch (action) {\r\n      // case 'play':\r\n      //   const { _deadline } = this.refs;\r\n\r\n      //   if (_deadline.value === '') {\r\n      //     this.showError(_deadline);\r\n      //     _deadline.focus();\r\n      //   } else {\r\n      //     this.removeError(_deadline);\r\n      //     onAction(id, action);\r\n      //   }\r\n      //   break;\r\n      default:\r\n        onAction(id, action);\r\n        break;\r\n    }\r\n  }\r\n\r\n  showError(el) {\r\n    el.classList.add('TaskItem-deadline_error');\r\n  }\r\n  removeError(el) {\r\n    el.classList.remove('TaskItem-deadline_error');\r\n  }\r\n\r\n  render() {\r\n    const { beforeAction } = this;\r\n    const { task, onChangeDeadline } = this.props;\r\n    return (\r\n      <div className=\"TaskItem\" style={this.style}>\r\n        <div className=\"TaskItem-title\">{task.title}</div>\r\n        <div className=\"TaskItem-action\">\r\n          {task.status !== 'play' && (\r\n            <button onClick={() => beforeAction(task.id, 'play')} className=\"TaskItem-play\">\r\n              Play\r\n            </button>\r\n          )}\r\n          {task.status === 'play' && (\r\n            <button onClick={() => beforeAction(task.id, 'pause')} className=\"TaskItem-pause\">\r\n              Pause\r\n            </button>\r\n          )}\r\n          <button onClick={() => beforeAction(task.id, 'stop')} className=\"TaskItem-stop\">\r\n            Stop\r\n          </button>\r\n        </div>\r\n        <div className=\"TaskItem-time\">\r\n          {/* <div className=\"TaskItem-time\">{time !== 0 && secToTime(time)}</div> */}\r\n          <div className=\"TaskItem-deadline\">\r\n            <input\r\n              type=\"text\"\r\n              ref=\"_deadline\"\r\n              defaultValue={task.deadline}\r\n              onChange={onChangeDeadline}\r\n            />\r\n          </div>\r\n          <div className=\"TaskItem-diff\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTaskItem.propTypes = {\r\n  task: PropTypes.object,\r\n  onAction: PropTypes.func,\r\n  time: PropTypes.number,\r\n  onChangeDeadline: PropTypes.func\r\n};\r\n\r\nTaskItem.defaultProps = {\r\n  task: {},\r\n  onAction: f => f,\r\n  time: 0,\r\n  onChangeDeadline: f => f\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TaskList.css';\r\n\r\nimport TaskItem from '../TaskItem/TaskItem';\r\n\r\nconst TaskList = ({ data = [], onAction = f => f, time = 0, onChangeDeadline = f => f }) => {\r\n  return (\r\n    <div className=\"TaskList\">\r\n      {data.map(task => (\r\n        <TaskItem\r\n          key={task.id}\r\n          task={task}\r\n          onAction={onAction}\r\n          time={time}\r\n          onChangeDeadline={onChangeDeadline}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskList.propTypes = {\r\n  data: PropTypes.array,\r\n  onAction: PropTypes.func,\r\n  time: PropTypes.number,\r\n  onChangeDeadline: PropTypes.func\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AddTask.css';\r\n\r\nclass AddTask extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.submit = this.submit.bind(this);\r\n  }\r\n\r\n  submit(e) {\r\n    const { _title } = this.refs;\r\n    const { onSubmit } = this.props;\r\n    e.preventDefault();\r\n    if (_title.value !== '') {\r\n      onSubmit(_title.value);\r\n      _title.value = '';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"AddTask\" onSubmit={this.submit}>\r\n        <input ref=\"_title\" className=\"AddTask-input\" />\r\n        <input type=\"submit\" value=\"Добавить\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nAddTask.propTypes = {\r\n  onSubmit: PropTypes.func\r\n};\r\n\r\nAddTask.defaultProps = {\r\n  onSubmit: f => f\r\n};\r\n\r\nexport default AddTask;\r\n","const task = [\r\n  {\r\n    id: '0175d1f0-a8c6-41bf-8d02-df5734d829a4',\r\n    title: 'Заявка на оплату',\r\n    status: 'stop',\r\n    time: 0,\r\n    deadline: ''\r\n  },\r\n  {\r\n    id: '0175d1f0-a8c6-41bf-8d02-df5734123123d829a4',\r\n    title: 'sdfsdfsfsdf',\r\n    status: 'stop',\r\n    time: 0,\r\n    deadline: ''\r\n  },\r\n  {\r\n    id: '0175d1f0-a8c6-41bf-8d02-df5734d85346769a4',\r\n    title: '23424234у 3',\r\n    status: 'stop',\r\n    time: 0,\r\n    deadline: ''\r\n  }\r\n];\r\n\r\nexport default task;\r\n","import React, { Component } from 'react';\nimport { v4 } from 'uuid';\nimport './App.css';\n\nimport TaskList from '../TaskList/TaskList';\nimport AddTask from '../AddTask/AddTask';\n\nimport dataTasks from '../../data/task';\nimport { secToTime } from '../../helpers/function';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: dataTasks,\n      currentTask: null,\n      time: 0\n    };\n\n    this.addTask = this.addTask.bind(this);\n    this.taskAction = this.taskAction.bind(this);\n    this.changeDeadline = this.changeDeadline.bind(this);\n  }\n\n  addTask(value) {\n    const task = this._prepareTask(value);\n    const tasks = [task, ...this.state.tasks];\n\n    this.setState({ tasks });\n  }\n\n  _prepareTask(value) {\n    return {\n      id: v4(),\n      title: value,\n      status: 'stop',\n      time: null,\n      deadline: null\n    };\n  }\n\n  taskAction(id, action) {\n    const tasks = this.state.tasks.map(task => {\n      if (task.id === id) {\n        switch (action) {\n          case 'play':\n            this.startTask(task);\n            break;\n          case 'stop':\n            this.stopTask();\n            break;\n          case 'pause':\n            this.pauseTask();\n            break;\n          default:\n            break;\n        }\n        console.log('this.state.time: ', this.state.time);\n        return {\n          ...task,\n          status: action,\n          time: this.state.time\n        };\n      } else {\n        if (task.status === 'play') {\n          return {\n            ...task,\n            status: 'pause'\n          };\n        }\n      }\n      return task;\n    });\n\n    this.setState({ tasks });\n  }\n\n  startTask(task) {\n    let time = task.time;\n    this.setState({ currentTask: task, time });\n\n    this.timerId = setInterval(() => {\n      let tiktak = time++;\n      this.setState({ time: tiktak });\n    }, 1000);\n  }\n  stopTask() {\n    clearTimeout(this.timerId);\n    this.setState({ currentTask: null });\n  }\n  pauseTask() {\n    clearTimeout(this.timerId);\n    this.setState({ currentTask: null });\n  }\n\n  changeDeadline(value) {\n    console.log('value: ', value);\n  }\n\n  render() {\n    const { tasks, time } = this.state;\n    const { addTask, taskAction, changeDeadline } = this;\n    return (\n      <div className=\"App\">\n        <AddTask onSubmit={addTask} />\n        <TaskList\n          data={tasks}\n          onAction={taskAction}\n          time={time}\n          onChangeDeadline={changeDeadline}\n        />\n        <div className=\"Timer\">{time !== 0 && secToTime(time)}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","function secToTime(time) {\r\n  //Перевод СЕКУНД во время\r\n  // Hours, minutes and seconds\r\n  const hrs = ~~(time / 3600);\r\n  const mins = ~~((time % 3600) / 60);\r\n  const secs = time % 60;\r\n  // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\r\n  let ret = '';\r\n  if (hrs > 0) {\r\n    ret += hrs + 'ч';\r\n  }\r\n  if (mins > 0) {\r\n    ret += ' ' + mins + 'м';\r\n  }\r\n  ret += ' ' + secs + 'с';\r\n  return ret;\r\n}\r\n\r\nexport { secToTime };\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}